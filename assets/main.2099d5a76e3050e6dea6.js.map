{"version":3,"file":"main.2099d5a76e3050e6dea6.js","mappings":"uqCAIAA,SAASC,iBAAiB,oBAAoB,YCJ/B,WACb,IAAMC,EAAOF,SAASG,qBAAqB,QAAQ,GAC7CC,EAASJ,SAASK,eAAe,UACjCC,EAAoB,CAAC,wBACrBC,EAAsB,CAAC,eAAgB,cAEzCC,EAAc,EACdC,EAAQ,CACVC,kBAAkB,EAClBC,kBAAkB,GAGpB,SAASC,EAAaC,GACpB,IAAMC,EAAQC,EAAAA,EAAA,GAAQN,GAAUI,GAC5BG,KAAKC,UAAUH,KAAcE,KAAKC,UAAUR,KAC9CA,EAAQK,EAKZ,WACE,GAAIL,EAAMC,kBAAoBD,EAAME,iBAAkB,CACpD,IAAK,IAALO,EAAA,EAAAC,EAAwBb,EAAiBY,EAAAC,EAAAC,OAAAF,IAAE,CAAtC,IAAMG,EAASF,EAAAD,GAClBhB,EAAKoB,UAAUC,IAAIF,EACrB,CACA,IAAK,IAALG,EAAA,EAAAC,EAAwBlB,EAAmBiB,EAAAC,EAAAL,OAAAI,IAAE,CAAxC,IAAMH,EAASI,EAAAD,GAClBpB,EAAOkB,UAAUC,IAAIF,EACvB,CACF,KAAO,CACL,IAAK,IAALK,EAAA,EAAAC,EAAwBrB,EAAiBoB,EAAAC,EAAAP,OAAAM,IAAE,CAAtC,IAAML,EAASM,EAAAD,GAClBxB,EAAKoB,UAAUM,OAAOP,EACxB,CACA,IAAK,IAALQ,EAAA,EAAAC,EAAwBvB,EAAmBsB,EAAAC,EAAAV,OAAAS,IAAE,CAAxC,IAAMR,EAASS,EAAAD,GAClBzB,EAAOkB,UAAUM,OAAOP,EAC1B,CACF,CACF,CApBIU,GAEJ,CAoBiBC,OAAOC,WAAW,iCAC1BhC,iBAAiB,UAAU,SAACiC,GACnCtB,EAAY,CAAEF,iBAAkBwB,EAAEC,SACpC,IAEAH,OAAO/B,iBAAiB,UAAU,SAACiC,GAEjCtB,EAAY,CAAED,iBADQqB,OAAOI,QAAU5B,IAEvCA,EAAcwB,OAAOI,OACvB,GACF,ED3CEhC,GELa,WAGb,SAASiC,EAAQC,GAA2B,IAAtBC,EAAYC,UAAApB,OAAA,QAAAqB,IAAAD,UAAA,IAAAA,UAAA,GAC1BE,EAAmD,SAAtCJ,EAAIK,aAAa,iBAC9BC,EAAQN,EAAIK,aAAa,eACzBE,EAAWP,EAAIK,aAAa,iBAC5BG,EAAS9C,SAASK,eAAewC,GAEnCN,GAAgBP,OAAOe,SAASC,KAAK5B,OAAS,GAAKwB,IAAUZ,OAAOe,SAASC,KAAKC,OAAO,GACvFjB,OAAOkB,WACTlB,OAAOkB,UAAUC,KAAK,CAAEC,MAAO,YAAFC,OAAcT,KAK3CF,GACFJ,EAAIgB,aAAa,gBAAiB,SAClCR,EAAOS,MAAMC,UAAY,EACzBV,EAAOS,MAAME,QAAU,iBAEnBzB,OAAOkB,WACTlB,OAAOkB,UAAUC,KAAK,CAAEC,MAAO,YAAFC,OAAcT,KAE7CN,EAAIgB,aAAa,gBAAiB,QAClCR,EAAOS,MAAMC,UAAY,SACzBV,EAAOS,MAAME,QAAU,yBAE3B,CA3BgBzD,SAAS0D,iBAAiB,iBA6BlCC,SAAQ,SAACC,GACfA,EAAO3D,iBAAiB,SAAS,SAACiC,GAChCA,EAAE2B,iBACFxB,EAAOH,EAAE4B,cACX,IACAzB,EAAOuB,GAAQ,EACjB,GACF,CF/BEG,EACF,G","sources":["webpack://nodejs-design-patterns-book/./src/js/index.js","webpack://nodejs-design-patterns-book/./src/js/navbar.js","webpack://nodejs-design-patterns-book/./src/js/faqs.js"],"sourcesContent":["import '../scss/style.scss'\nimport navbar from './navbar.js'\nimport faqs from './faqs.js'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  navbar() // init navbar\n  faqs() // init faqs\n})\n","export default function navbar () {\n  const html = document.getElementsByTagName('html')[0]\n  const navbar = document.getElementById('navbar')\n  const htmlStickyClasses = ['has-navbar-fixed-top']\n  const navbarStickyClasses = ['is-fixed-top', 'has-shadow']\n\n  let lastScrollY = 0\n  let state = {\n    stickyBarEnabled: true,\n    stickyBarVisible: true\n  }\n\n  function updateState (stateChanges) {\n    const newState = { ...state, ...stateChanges }\n    if (JSON.stringify(newState) !== JSON.stringify(state)) {\n      state = newState\n      update()\n    }\n  }\n\n  function update () {\n    if (state.stickyBarEnabled && state.stickyBarVisible) {\n      for (const className of htmlStickyClasses) {\n        html.classList.add(className)\n      }\n      for (const className of navbarStickyClasses) {\n        navbar.classList.add(className)\n      }\n    } else {\n      for (const className of htmlStickyClasses) {\n        html.classList.remove(className)\n      }\n      for (const className of navbarStickyClasses) {\n        navbar.classList.remove(className)\n      }\n    }\n  }\n\n  const mobileMq = window.matchMedia('screen and (max-width: 768px)')\n  mobileMq.addEventListener('change', (e) => {\n    updateState({ stickyBarEnabled: e.matches })\n  })\n\n  window.addEventListener('scroll', (e) => {\n    const isScrollingUp = window.scrollY < lastScrollY\n    updateState({ stickyBarVisible: isScrollingUp })\n    lastScrollY = window.scrollY\n  })\n}\n","export default function faqs () {\n  const buttons = document.querySelectorAll('dl.faq button')\n\n  function toggle (btn, skipIfAnchor = false) {\n    const isExpanded = btn.getAttribute('aria-expanded') === 'true'\n    const faqId = btn.getAttribute('data-faq-id')\n    const targetId = btn.getAttribute('aria-controls')\n    const target = document.getElementById(targetId)\n\n    if (skipIfAnchor && window.location.hash.length > 0 && faqId === window.location.hash.substr(1)) {\n      if (window.dataLayer) {\n        window.dataLayer.push({ event: `faq_open_${faqId}` })\n      }\n      return\n    }\n\n    if (isExpanded) {\n      btn.setAttribute('aria-expanded', 'false')\n      target.style.maxHeight = 0\n      target.style.padding = '0 0 0 3.2rem'\n    } else {\n      if (window.dataLayer) {\n        window.dataLayer.push({ event: `faq_open_${faqId}` })\n      }\n      btn.setAttribute('aria-expanded', 'true')\n      target.style.maxHeight = '1000px'\n      target.style.padding = '1.5rem 0 1.5rem 3.2rem'\n    }\n  }\n\n  buttons.forEach((button) => {\n    button.addEventListener('click', (e) => {\n      e.preventDefault()\n      toggle(e.currentTarget)\n    })\n    toggle(button, true) // once the page loads collapse all tha faqs\n  })\n}\n"],"names":["document","addEventListener","html","getElementsByTagName","navbar","getElementById","htmlStickyClasses","navbarStickyClasses","lastScrollY","state","stickyBarEnabled","stickyBarVisible","updateState","stateChanges","newState","_objectSpread","JSON","stringify","_i","_htmlStickyClasses","length","className","classList","add","_i2","_navbarStickyClasses","_i3","_htmlStickyClasses2","remove","_i4","_navbarStickyClasses2","update","window","matchMedia","e","matches","scrollY","toggle","btn","skipIfAnchor","arguments","undefined","isExpanded","getAttribute","faqId","targetId","target","location","hash","substr","dataLayer","push","event","concat","setAttribute","style","maxHeight","padding","querySelectorAll","forEach","button","preventDefault","currentTarget","faqs"],"sourceRoot":""}